name: Alfie iOS Test Automation

on:
  push:
    branches: [main]
  pull_request:
  workflow_dispatch:

jobs:
  ios-tests:
    runs-on: macos-15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: "temurin"
          java-version: "17"

      - name: List Xcode versions
        run: ls -l /Applications | grep Xcode

      - name: Show selected Xcode version
        run: xcodebuild -version

      - name: Show available iOS simulators
        run: xcrun simctl list devices

      - name: Download iOS app artifacts
        run: |
          mkdir -p Melmac/src/main/resources/apps
          curl -L "https://github.com/Mindera/Alfie-UITests/releases/download/asdsad/Alfie.zip" -o Melmac/src/main/resources/apps/Alfie.zip
          cd Melmac/src/main/resources/apps
          unzip -o Alfie.zip
          rm Alfie.zip
          ls -l

      - name: Generate Gradle wrapper
        working-directory: Melmac
        run: gradle wrapper --gradle-version 8.13

      - name: Make Gradle wrapper executable
        working-directory: Melmac
        run: chmod +x gradlew

      - name: Build backend
        working-directory: Melmac
        run: ./gradlew build

      - name: Start backend
        working-directory: Melmac
        run: ./gradlew run > $GITHUB_WORKSPACE/backend.log 2>&1 &

      - name: Tail backend log
        run: tail -f $GITHUB_WORKSPACE/backend.log &

      - name: Wait for backend to be ready
        run: |
          for i in {1..30}; do
            if curl -s http://localhost:8080/; then
              echo "Backend is up!"
              exit 0
            fi
            sleep 2
          done
          echo "Backend did not start in time" >&2
          exit 1

      
      - name: Create test suite
        working-directory: Melmac
        run: |
          mkdir -p results
          curl -s -X POST http://localhost:8080/test-suites \
            -H "Content-Type: application/json" \
            -d '{
              "testSuiteName": "My Test Suite",
              "testSuiteDescription": "Description of my test suite"
            }' | tee results/test_suite.json
          export TEST_SUITE_ID=$(jq '.testSuiteId' results/test_suite.json)
          echo "TEST_SUITE_ID=$TEST_SUITE_ID" >> $GITHUB_ENV

      - name: Create iOS test plan
        working-directory: Melmac
        run: |
          curl -s -X POST http://localhost:8080/test-plans \
            -H "Content-Type: application/json" \
            -d "{
              \"notes\": \"Test plan for App Startup Time metric\",
              \"testName\": \"Startup Time Plan\",
              \"metricMetricId\": 1,
              \"deviceName\": \"iPhone 16 Pro\",
              \"appName\": \"Alfie.app\",
              \"appVersion\": \"0.8.1\",
              \"appPackage\": \"com.mindera.alfie.debug\",
              \"executionTypeExecutionTypeId\": 1,
              \"thresholds\": [
                {
                  \"targetValue\": 10000,
                  \"thresholdTypeThresholdTypeId\": 2,
                  \"metricOutputMetricOutputId\": 1
                }
              ],
              \"metricParameters\": [
                {
                  \"parameterValue\": \"account-btn\",
                  \"metricParameterMetricParameterId\": 1
                },
                {
                  \"parameterValue\": \"50000\",
                  \"metricParameterMetricParameterId\": 2
                }
              ],
              \"executionTypeParameters\": [],
              \"testSuiteVersionId\": ${TEST_SUITE_ID}
            }"

      - name: Run iOS test suite
        working-directory: Melmac
        run: curl -X POST "http://localhost:8080/test-suites/${TEST_SUITE_ID}/run"

      - name: Upload backend log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: backend-log
          path: backend.log
